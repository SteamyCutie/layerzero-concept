{
  "address": "0x8A40A67813Ce66669f1515de9dc76fbf2504758B",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_endpoint",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "counters",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endpoint",
      "outputs": [
        {
          "internalType": "contract ILayerZeroEndpoint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        }
      ],
      "name": "forceResumeReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_chainId",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_configType",
          "type": "uint256"
        }
      ],
      "name": "getConfig",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReceiveVersion",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSendVersion",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        },
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "_payload",
          "type": "bytes"
        }
      ],
      "name": "lzReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "remotes",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_dstChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_dstAddress",
          "type": "bytes"
        },
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        }
      ],
      "name": "sendCounter",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_chainId",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "_configType",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_config",
          "type": "bytes"
        }
      ],
      "name": "setConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "remoteChainId",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "confirmations",
          "type": "uint16"
        }
      ],
      "name": "setInboundConfirmations",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "dstChainId",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        }
      ],
      "name": "setOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "remoteChainId",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "confirmations",
          "type": "uint16"
        }
      ],
      "name": "setOutboundConfirmations",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "version",
          "type": "uint16"
        }
      ],
      "name": "setReceiveVersion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_chainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_remoteAddress",
          "type": "bytes"
        }
      ],
      "name": "setRemote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "version",
          "type": "uint16"
        }
      ],
      "name": "setSendVersion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_chainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_dstAddress",
          "type": "bytes"
        },
        {
          "internalType": "int256",
          "name": "_amount",
          "type": "int256"
        },
        {
          "internalType": "string",
          "name": "_method",
          "type": "string"
        }
      ],
      "name": "updateCounter",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x1c05cece860625d10a632ea2ad9a922af873cfec729d007c190006364dd12da1",
  "receipt": {
    "to": null,
    "from": "0x3A54802752fEFDc1aF2CD0b6DFA4F24694bDEE33",
    "contractAddress": "0x8A40A67813Ce66669f1515de9dc76fbf2504758B",
    "transactionIndex": 21,
    "gasUsed": "2523856",
    "logsBloom": "0x
    "blockHash": "0xb062573904ffa121ef4b28410e859d153aa932134eb575d7fbd4edcdc735eef9",
    "transactionHash": "0x1c05cece860625d10a632ea2ad9a922af873cfec729d007c190006364dd12da1",
    "logs": [
      {
        "transactionIndex": 21,
        "blockNumber": 10445455,
        "transactionHash": "0x1c05cece860625d10a632ea2ad9a922af873cfec729d007c190006364dd12da1",
        "address": "0x8A40A67813Ce66669f1515de9dc76fbf2504758B",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000003a54802752fefdc1af2cd0b6dfa4f24694bdee33"
        ],
        "data": "0x",
        "logIndex": 48,
        "blockHash": "0xb062573904ffa121ef4b28410e859d153aa932134eb575d7fbd4edcdc735eef9"
      }
    ],
    "blockNumber": 10445455,
    "cumulativeGasUsed": "7044800",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x79a63d6d8BBD5c6dfc774dA79bCcD948EAcb53FA"
  ],
  "numDeployments": 1,
  "solcInputHash": "07cf439af2be6dd17590c667af0273a4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_endpoint\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"counters\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReceiveVersion\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSendVersion\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"remotes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_dstAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"}],\"name\":\"sendCounter\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"confirmations\",\"type\":\"uint16\"}],\"name\":\"setInboundConfirmations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"setOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"confirmations\",\"type\":\"uint16\"}],\"name\":\"setOutboundConfirmations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"setRemote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_dstAddress\",\"type\":\"bytes\"},{\"internalType\":\"int256\",\"name\":\"_amount\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"_method\",\"type\":\"string\"}],\"name\":\"updateCounter\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MasterChain.sol\":\"MasterChain\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/MasterChain.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\n\\r\\npragma solidity ^0.8.4;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"./interfaces/ILayerZeroReceiver.sol\\\";\\r\\nimport \\\"./interfaces/ILayerZeroEndpoint.sol\\\";\\r\\nimport \\\"./interfaces/ILayerZeroUserApplicationConfig.sol\\\";\\r\\nimport \\\"./interfaces/IPOCDeployment.sol\\\";\\r\\n\\r\\ncontract MasterChain is\\r\\n    Ownable,\\r\\n    ILayerZeroReceiver,\\r\\n    ILayerZeroUserApplicationConfig,\\r\\n    IPOCDeployment\\r\\n{\\r\\n    ILayerZeroEndpoint public endpoint;\\r\\n    mapping(uint16 => bytes) public remotes;\\r\\n    mapping(uint16 => int256) public counters;\\r\\n\\r\\n    constructor(address _endpoint) {\\r\\n        endpoint = ILayerZeroEndpoint(_endpoint);\\r\\n    }\\r\\n\\r\\n    function updateCounter(\\r\\n        uint16 _chainId,\\r\\n        bytes memory _dstAddress,\\r\\n        int256 _amount,\\r\\n        string memory _method\\r\\n    ) external payable override {\\r\\n        int256 amount;\\r\\n        bytes memory method = bytes(_method);\\r\\n        bytes memory expectAdd = bytes(\\\"ADD\\\");\\r\\n        bytes memory expectSub = bytes(\\\"SUB\\\");\\r\\n        bytes memory expectMul = bytes(\\\"MUL\\\");\\r\\n        if (\\r\\n            method.length == expectAdd.length &&\\r\\n            keccak256(method) == keccak256(expectAdd)\\r\\n        ) amount = counters[_chainId] + _amount;\\r\\n        else if (\\r\\n            method.length == expectSub.length &&\\r\\n            keccak256(method) == keccak256(expectSub)\\r\\n        ) amount = counters[_chainId] - _amount;\\r\\n        else if (\\r\\n            method.length == expectMul.length &&\\r\\n            keccak256(method) == keccak256(expectMul)\\r\\n        ) amount = counters[_chainId] * _amount;\\r\\n        else amount = counters[_chainId];\\r\\n\\r\\n        bytes memory _params = abi.encode(\\\"SET\\\", _chainId, amount);\\r\\n        endpoint.send{value: msg.value}(\\r\\n            _chainId,\\r\\n            _dstAddress,\\r\\n            _params,\\r\\n            payable(msg.sender),\\r\\n            address(0x0),\\r\\n            bytes(\\\"\\\")\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function sendCounter(\\r\\n        uint16 _dstChainId,\\r\\n        bytes memory _dstAddress,\\r\\n        uint16 _srcChainId\\r\\n    ) public payable override {\\r\\n        bytes memory _params = abi.encode(\\r\\n            \\\"SET\\\",\\r\\n            _srcChainId,\\r\\n            counters[_srcChainId]\\r\\n        );\\r\\n        endpoint.send{value: msg.value}(\\r\\n            _dstChainId,\\r\\n            _dstAddress,\\r\\n            _params,\\r\\n            payable(msg.sender),\\r\\n            address(0x0),\\r\\n            bytes(\\\"\\\")\\r\\n        );\\r\\n    }\\r\\n\\r\\n    // overrides lzReceive function in ILayerZeroReceiver.\\r\\n    // automatically invoked on the receiving chain after the source chain calls endpoint.send(...)\\r\\n    function lzReceive(\\r\\n        uint16 _srcChainId,\\r\\n        bytes memory _srcAddress,\\r\\n        uint64, /*_nonce*/\\r\\n        bytes memory _payload\\r\\n    ) external override {\\r\\n        require(msg.sender == address(endpoint));\\r\\n        require(\\r\\n            _srcAddress.length == remotes[_srcChainId].length &&\\r\\n                keccak256(_srcAddress) == keccak256(remotes[_srcChainId]),\\r\\n            \\\"Invalid remote sender address. owner should call setRemote() to enable remote contract\\\"\\r\\n        );\\r\\n        string memory method;\\r\\n        uint16 chainId;\\r\\n        bytes memory dstAddress;\\r\\n        int256 amount;\\r\\n        (method, chainId, dstAddress, amount) = abi.decode(\\r\\n            _payload,\\r\\n            (string, uint16, bytes, int256)\\r\\n        );\\r\\n\\r\\n        if (keccak256(bytes(method)) == keccak256(bytes(\\\"SET\\\"))) {\\r\\n            counters[_srcChainId] = amount;\\r\\n        } else {\\r\\n            sendCounter(_srcChainId, _srcAddress, chainId);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function setConfig(\\r\\n        uint16, /*_version*/\\r\\n        uint16 _chainId,\\r\\n        uint256 _configType,\\r\\n        bytes calldata _config\\r\\n    ) external override {\\r\\n        endpoint.setConfig(\\r\\n            endpoint.getSendVersion(address(this)),\\r\\n            _chainId,\\r\\n            _configType,\\r\\n            _config\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getConfig(\\r\\n        uint16, /*_dstChainId*/\\r\\n        uint16 _chainId,\\r\\n        address,\\r\\n        uint256 _configType\\r\\n    ) external view returns (bytes memory) {\\r\\n        return\\r\\n            endpoint.getConfig(\\r\\n                endpoint.getSendVersion(address(this)),\\r\\n                _chainId,\\r\\n                address(this),\\r\\n                _configType\\r\\n            );\\r\\n    }\\r\\n\\r\\n    function setSendVersion(uint16 version) external override {\\r\\n        endpoint.setSendVersion(version);\\r\\n    }\\r\\n\\r\\n    function setReceiveVersion(uint16 version) external override {\\r\\n        endpoint.setReceiveVersion(version);\\r\\n    }\\r\\n\\r\\n    function getSendVersion() external view returns (uint16) {\\r\\n        return endpoint.getSendVersion(address(this));\\r\\n    }\\r\\n\\r\\n    function getReceiveVersion() external view returns (uint16) {\\r\\n        return endpoint.getReceiveVersion(address(this));\\r\\n    }\\r\\n\\r\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress)\\r\\n        external\\r\\n        override\\r\\n    {\\r\\n        //\\r\\n    }\\r\\n\\r\\n    // set the Oracle to be used by this UA for LayerZero messages\\r\\n    function setOracle(uint16 dstChainId, address oracle) external {\\r\\n        uint256 typeOracle = 6; // from UltraLightNode\\r\\n        // set the Oracle\\r\\n        endpoint.setConfig(\\r\\n            endpoint.getSendVersion(address(this)),\\r\\n            dstChainId,\\r\\n            typeOracle,\\r\\n            abi.encode(oracle)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    // _chainId - the chainId for the remote contract\\r\\n    // _remoteAddress - the contract address on the remote chainId\\r\\n    // the owner must set remote contract addresses.\\r\\n    // in lzReceive(), a require() ensures only messages\\r\\n    // from known contracts can be received.\\r\\n    function setRemote(uint16 _chainId, bytes calldata _remoteAddress)\\r\\n        external\\r\\n        onlyOwner\\r\\n    {\\r\\n        require(\\r\\n            remotes[_chainId].length == 0,\\r\\n            \\\"The remote address has already been set for the chainId!\\\"\\r\\n        );\\r\\n        remotes[_chainId] = _remoteAddress;\\r\\n        counters[_chainId] = 0;\\r\\n    }\\r\\n\\r\\n    // set the inbound block confirmations\\r\\n    function setInboundConfirmations(uint16 remoteChainId, uint16 confirmations)\\r\\n        external\\r\\n    {\\r\\n        endpoint.setConfig(\\r\\n            endpoint.getSendVersion(address(this)),\\r\\n            remoteChainId,\\r\\n            2, // CONFIG_TYPE_INBOUND_BLOCK_CONFIRMATIONS\\r\\n            abi.encode(confirmations)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    // set outbound block confirmations\\r\\n    function setOutboundConfirmations(\\r\\n        uint16 remoteChainId,\\r\\n        uint16 confirmations\\r\\n    ) external {\\r\\n        endpoint.setConfig(\\r\\n            endpoint.getSendVersion(address(this)),\\r\\n            remoteChainId,\\r\\n            5, // CONFIG_TYPE_OUTBOUND_BLOCK_CONFIRMATIONS\\r\\n            abi.encode(confirmations)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    // allow this contract to receive ether\\r\\n    fallback() external payable {}\\r\\n\\r\\n    receive() external payable {}\\r\\n}\\r\\n\",\"keccak256\":\"0x9ac042c9631485f875a2876713e5cd7fefe1e709be0da867816c42b51f9cc0ce\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\r\\n\\r\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\r\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\r\\n    // @param _dstChainId - the destination chain identifier\\r\\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\r\\n    // @param _payload - a custom bytes payload to send to the destination contract\\r\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\r\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\r\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\r\\n    function send(uint16 _dstChainId, bytes calldata _destination, bytes calldata _payload, address payable _refundAddress, address _zroPaymentAddress, bytes calldata _adapterParams) external payable;\\r\\n\\r\\n    // @notice used by the messaging library to publish verified payload\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\r\\n    // @param _dstAddress - the address on destination chain\\r\\n    // @param _nonce - the unbound message ordering nonce\\r\\n    // @param _gasLimit - the gas limit for external contract execution\\r\\n    // @param _payload - verified payload to send to the destination contract\\r\\n    function receivePayload(uint16 _srcChainId, bytes calldata _srcAddress, address _dstAddress, uint64 _nonce, uint _gasLimit, bytes calldata _payload) external;\\r\\n\\r\\n    // @notice get the inboundNonce of a receiver from a source chain which could be EVM or non-EVM chain\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\\r\\n\\r\\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\\r\\n\\r\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\r\\n    // @param _dstChainId - the destination chain identifier\\r\\n    // @param _userApplication - the user app address on this EVM chain\\r\\n    // @param _payload - the custom message to send over LayerZero\\r\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\r\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\r\\n    function estimateFees(uint16 _dstChainId, address _userApplication, bytes calldata _payload, bool _payInZRO, bytes calldata _adapterParam) external view returns (uint nativeFee, uint zroFee);\\r\\n\\r\\n    // @notice get this Endpoint's immutable source identifier\\r\\n    function getChainId() external view returns (uint16);\\r\\n\\r\\n    // @notice the interface to retry failed message on this Endpoint destination\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    // @param _payload - the payload to be retried\\r\\n    function retryPayload(uint16 _srcChainId, bytes calldata _srcAddress, bytes calldata _payload) external;\\r\\n\\r\\n    // @notice query if any STORED payload (message blocking) at the endpoint.\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\\r\\n\\r\\n    // @notice query if the _libraryAddress is valid for sending msgs.\\r\\n    // @param _userApplication - the user app address on this EVM chain\\r\\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\\r\\n\\r\\n    // @notice query if the _libraryAddress is valid for receiving msgs.\\r\\n    // @param _userApplication - the user app address on this EVM chain\\r\\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\\r\\n\\r\\n    // @notice query if the non-reentrancy guard for send() is on\\r\\n    // @return true if the guard is on. false otherwise\\r\\n    function isSendingPayload() external view returns (bool);\\r\\n\\r\\n    // @notice query if the non-reentrancy guard for receive() is on\\r\\n    // @return true if the guard is on. false otherwise\\r\\n    function isReceivingPayload() external view returns (bool);\\r\\n\\r\\n    // @notice get the configuration of the LayerZero messaging library of the specified version\\r\\n    // @param _version - messaging library version\\r\\n    // @param _chainId - the chainId for the pending config change\\r\\n    // @param _userApplication - the contract address of the user application\\r\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\r\\n    function getConfig(uint16 _version, uint16 _chainId, address _userApplication, uint _configType) external view returns (bytes memory);\\r\\n\\r\\n    // @notice get the send() LayerZero messaging library version\\r\\n    // @param _userApplication - the contract address of the user application\\r\\n    function getSendVersion(address _userApplication) external view returns (uint16);\\r\\n\\r\\n    // @notice get the lzReceive() LayerZero messaging library version\\r\\n    // @param _userApplication - the contract address of the user application\\r\\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\\r\\n}\\r\\n\",\"keccak256\":\"0x5304d445f73fc334336fb88caa0eec207e238df582485799828fe2b100bd8343\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\ninterface ILayerZeroReceiver {\\r\\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\\r\\n    // @param _srcChainId - the source endpoint identifier\\r\\n    // @param _srcAddress - the source sending contract address from the source chain\\r\\n    // @param _nonce - the ordered message nonce\\r\\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\\r\\n    function lzReceive(uint16 _srcChainId, bytes calldata _srcAddress, uint64 _nonce, bytes calldata _payload) external;\\r\\n}\",\"keccak256\":\"0x78328d42eeec94e7cda3208849dd835d02bf6ce7005c443be046fe1cbfda81bf\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\ninterface ILayerZeroUserApplicationConfig {\\r\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\r\\n    // @param _version - messaging library version\\r\\n    // @param _chainId - the chainId for the pending config change\\r\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\r\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\r\\n    function setConfig(uint16 _version, uint16 _chainId, uint _configType, bytes calldata _config) external;\\r\\n\\r\\n    // @notice set the send() LayerZero messaging library version to _version\\r\\n    // @param _version - new messaging library version\\r\\n    function setSendVersion(uint16 _version) external;\\r\\n\\r\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\r\\n    // @param _version - new messaging library version\\r\\n    function setReceiveVersion(uint16 _version) external;\\r\\n\\r\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\r\\n    // @param _srcChainId - the chainId of the source chain\\r\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\r\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x3f6707ec8829588ae4eb629ca952b9b019532ce47aa01aad48bcdf9d03c72bac\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IPOCDeployment.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\n\\r\\npragma solidity ^0.8.4;\\r\\n\\r\\ninterface IPOCDeployment {\\r\\n    function updateCounter(\\r\\n        uint16 _chainId,\\r\\n        bytes memory _dstAddress,\\r\\n        int256 _amount,\\r\\n        string memory _method\\r\\n    ) external payable;\\r\\n\\r\\n    function sendCounter(\\r\\n        uint16 _dstChainId,\\r\\n        bytes memory _dstAddress,\\r\\n        uint16 _srcChainId\\r\\n    ) external payable;\\r\\n}\\r\\n\",\"keccak256\":\"0x6b270731b9dea9926a503221bc58a9fbbaa49f2d932370ab0cba19fed49cdea2\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162002de838038062002de8833981810160405281019062000037919062000182565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620001fc565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200017c81620001e2565b92915050565b6000602082840312156200019557600080fd5b6000620001a5848285016200016b565b91505092915050565b6000620001bb82620001c2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001ed81620001ae565b8114620001f957600080fd5b50565b612bdc806200020c6000396000f3fe6080604052600436106101225760003560e01c8063715018a6116100a0578063ac0b39c611610064578063ac0b39c6146103a1578063cbed8b9c146103bd578063cf5d1471146103e6578063f2fde38b14610411578063f5ecbdbc1461043a57610129565b8063715018a6146102c95780638da5cb5b146102e05780639d1f61131461030b5780639f7fa3aa14610348578063a31a9a801461036457610129565b806342d65a8d116100e757806342d65a8d146101f8578063492e527e1461022157806354a5beda1461024a5780635e280f11146102755780636df65371146102a057610129565b80621d35671461012b57806307e0db171461015457806310ddb1371461017d57806320cdd0a1146101a65780632b2257dc146101cf57610129565b3661012957005b005b34801561013757600080fd5b50610152600480360381019061014d9190611daa565b610477565b005b34801561016057600080fd5b5061017b60048036038101906101769190611bca565b61062e565b005b34801561018957600080fd5b506101a4600480360381019061019f9190611bca565b6106be565b005b3480156101b257600080fd5b506101cd60048036038101906101c89190611c58565b61074e565b005b3480156101db57600080fd5b506101f660048036038101906101f19190611e3d565b610885565b005b34801561020457600080fd5b5061021f600480360381019061021a9190611c58565b6109e6565b005b34801561022d57600080fd5b5061024860048036038101906102439190611c1c565b6109eb565b005b34801561025657600080fd5b5061025f610b52565b60405161026c91906122ae565b60405180910390f35b34801561028157600080fd5b5061028a610c04565b60405161029791906121bc565b60405180910390f35b3480156102ac57600080fd5b506102c760048036038101906102c29190611e3d565b610c2a565b005b3480156102d557600080fd5b506102de610d8b565b005b3480156102ec57600080fd5b506102f5610e13565b604051610302919061217f565b60405180910390f35b34801561031757600080fd5b50610332600480360381019061032d9190611bca565b610e3c565b60405161033f919061219a565b60405180910390f35b610362600480360381019061035d9190611cb0565b610edc565b005b34801561037057600080fd5b5061038b60048036038101906103869190611bca565b61117e565b60405161039891906121d7565b60405180910390f35b6103bb60048036038101906103b69190611d43565b611196565b005b3480156103c957600080fd5b506103e460048036038101906103df9190611edc565b611285565b005b3480156103f257600080fd5b506103fb6113cb565b60405161040891906122ae565b60405180910390f35b34801561041d57600080fd5b5061043860048036038101906104339190611acd565b61147d565b005b34801561044657600080fd5b50610461600480360381019061045c9190611e79565b611575565b60405161046e919061219a565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104d157600080fd5b600260008561ffff1661ffff16815260200190815260200160002080546104f7906128cd565b9050835114801561053d5750600260008561ffff1661ffff16815260200190815260200160002060405161052b9190612168565b60405180910390208380519060200120145b61057c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057390612212565b60405180910390fd5b6060600060606000848060200190518101906105989190611b37565b809450819550829650839750505050506040518060400160405280600381526020017f534554000000000000000000000000000000000000000000000000000000000081525080519060200120848051906020012014156106185780600360008a61ffff1661ffff16815260200190815260200160002081905550610624565b610623888885611196565b5b5050505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307e0db17826040518263ffffffff1660e01b815260040161068991906122ae565b600060405180830381600087803b1580156106a357600080fd5b505af11580156106b7573d6000803e3d6000fd5b5050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166310ddb137826040518263ffffffff1660e01b815260040161071991906122ae565b600060405180830381600087803b15801561073357600080fd5b505af1158015610747573d6000803e3d6000fd5b5050505050565b6107566116e1565b73ffffffffffffffffffffffffffffffffffffffff16610774610e13565b73ffffffffffffffffffffffffffffffffffffffff16146107ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c19061226e565b60405180910390fd5b6000600260008561ffff1661ffff16815260200190815260200160002080546107f2906128cd565b905014610834576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082b9061228e565b60405180910390fd5b8181600260008661ffff1661ffff168152602001908152602001600020919061085e9291906117ad565b506000600360008561ffff1661ffff16815260200190815260200160002081905550505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cbed8b9c600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663096568f6306040518263ffffffff1660e01b815260040161091e919061217f565b60206040518083038186803b15801561093657600080fd5b505afa15801561094a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096e9190611bf3565b8460058560405160200161098291906122ae565b6040516020818303038152906040526040518563ffffffff1660e01b81526004016109b094939291906123d0565b600060405180830381600087803b1580156109ca57600080fd5b505af11580156109de573d6000803e3d6000fd5b505050505050565b505050565b600060069050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cbed8b9c600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663096568f6306040518263ffffffff1660e01b8152600401610a8a919061217f565b60206040518083038186803b158015610aa257600080fd5b505afa158015610ab6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ada9190611bf3565b858486604051602001610aed919061217f565b6040516020818303038152906040526040518563ffffffff1660e01b8152600401610b1b949392919061246a565b600060405180830381600087803b158015610b3557600080fd5b505af1158015610b49573d6000803e3d6000fd5b50505050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663096568f6306040518263ffffffff1660e01b8152600401610baf919061217f565b60206040518083038186803b158015610bc757600080fd5b505afa158015610bdb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bff9190611bf3565b905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cbed8b9c600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663096568f6306040518263ffffffff1660e01b8152600401610cc3919061217f565b60206040518083038186803b158015610cdb57600080fd5b505afa158015610cef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d139190611bf3565b84600285604051602001610d2791906122ae565b6040516020818303038152906040526040518563ffffffff1660e01b8152600401610d559493929190612384565b600060405180830381600087803b158015610d6f57600080fd5b505af1158015610d83573d6000803e3d6000fd5b505050505050565b610d936116e1565b73ffffffffffffffffffffffffffffffffffffffff16610db1610e13565b73ffffffffffffffffffffffffffffffffffffffff1614610e07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dfe9061226e565b60405180910390fd5b610e1160006116e9565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60026020528060005260406000206000915090508054610e5b906128cd565b80601f0160208091040260200160405190810160405280929190818152602001828054610e87906128cd565b8015610ed45780601f10610ea957610100808354040283529160200191610ed4565b820191906000526020600020905b815481529060010190602001808311610eb757829003601f168201915b505050505081565b60008082905060006040518060400160405280600381526020017f4144440000000000000000000000000000000000000000000000000000000000815250905060006040518060400160405280600381526020017f5355420000000000000000000000000000000000000000000000000000000000815250905060006040518060400160405280600381526020017f4d554c0000000000000000000000000000000000000000000000000000000000815250905082518451148015610fae575082805190602001208480519060200120145b15610fe15786600360008b61ffff1661ffff16815260200190815260200160002054610fda919061258a565b94506110a4565b81518451148015610fff575081805190602001208480519060200120145b156110325786600360008b61ffff1661ffff1681526020019081526020016000205461102b9190612735565b94506110a3565b80518451148015611050575080805190602001208480519060200120145b156110835786600360008b61ffff1661ffff1681526020019081526020016000205461107c919061261e565b94506110a2565b600360008a61ffff1661ffff1681526020019081526020016000205494505b5b5b600089866040516020016110b9929190612232565b6040516020818303038152906040529050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c5803100348c8c85336000604051806020016040528060008152506040518863ffffffff1660e01b8152600401611140969594939291906122c9565b6000604051808303818588803b15801561115957600080fd5b505af115801561116d573d6000803e3d6000fd5b505050505050505050505050505050565b60036020528060005260406000206000915090505481565b600081600360008461ffff1661ffff168152602001908152602001600020546040516020016111c6929190612232565b6040516020818303038152906040529050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c580310034868685336000604051806020016040528060008152506040518863ffffffff1660e01b815260040161124d969594939291906122c9565b6000604051808303818588803b15801561126657600080fd5b505af115801561127a573d6000803e3d6000fd5b505050505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cbed8b9c600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663096568f6306040518263ffffffff1660e01b815260040161131e919061217f565b60206040518083038186803b15801561133657600080fd5b505afa15801561134a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136e9190611bf3565b868686866040518663ffffffff1660e01b815260040161139295949392919061241c565b600060405180830381600087803b1580156113ac57600080fd5b505af11580156113c0573d6000803e3d6000fd5b505050505050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663da1a7c9a306040518263ffffffff1660e01b8152600401611428919061217f565b60206040518083038186803b15801561144057600080fd5b505afa158015611454573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114789190611bf3565b905090565b6114856116e1565b73ffffffffffffffffffffffffffffffffffffffff166114a3610e13565b73ffffffffffffffffffffffffffffffffffffffff16146114f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114f09061226e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611569576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611560906121f2565b60405180910390fd5b611572816116e9565b50565b6060600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f5ecbdbc600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663096568f6306040518263ffffffff1660e01b8152600401611610919061217f565b60206040518083038186803b15801561162857600080fd5b505afa15801561163c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116609190611bf3565b8630866040518563ffffffff1660e01b8152600401611682949392919061233f565b60006040518083038186803b15801561169a57600080fd5b505afa1580156116ae573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906116d79190611af6565b9050949350505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8280546117b9906128cd565b90600052602060002090601f0160209004810192826117db5760008555611822565b82601f106117f457803560ff1916838001178555611822565b82800160010185558215611822579182015b82811115611821578235825591602001919060010190611806565b5b50905061182f9190611833565b5090565b5b8082111561184c576000816000905550600101611834565b5090565b600061186361185e846124db565b6124b6565b90508281526020810184848401111561187b57600080fd5b61188684828561288b565b509392505050565b60006118a161189c846124db565b6124b6565b9050828152602081018484840111156118b957600080fd5b6118c484828561289a565b509392505050565b60006118df6118da8461250c565b6124b6565b9050828152602081018484840111156118f757600080fd5b61190284828561288b565b509392505050565b600061191d6119188461250c565b6124b6565b90508281526020810184848401111561193557600080fd5b61194084828561289a565b509392505050565b60008135905061195781612b33565b92915050565b60008083601f84011261196f57600080fd5b8235905067ffffffffffffffff81111561198857600080fd5b6020830191508360018202830111156119a057600080fd5b9250929050565b600082601f8301126119b857600080fd5b81356119c8848260208601611850565b91505092915050565b600082601f8301126119e257600080fd5b81516119f284826020860161188e565b91505092915050565b600081359050611a0a81612b4a565b92915050565b600081519050611a1f81612b4a565b92915050565b600082601f830112611a3657600080fd5b8135611a468482602086016118cc565b91505092915050565b600082601f830112611a6057600080fd5b8151611a7084826020860161190a565b91505092915050565b600081359050611a8881612b61565b92915050565b600081519050611a9d81612b61565b92915050565b600081359050611ab281612b78565b92915050565b600081359050611ac781612b8f565b92915050565b600060208284031215611adf57600080fd5b6000611aed84828501611948565b91505092915050565b600060208284031215611b0857600080fd5b600082015167ffffffffffffffff811115611b2257600080fd5b611b2e848285016119d1565b91505092915050565b60008060008060808587031215611b4d57600080fd5b600085015167ffffffffffffffff811115611b6757600080fd5b611b7387828801611a4f565b9450506020611b8487828801611a8e565b935050604085015167ffffffffffffffff811115611ba157600080fd5b611bad878288016119d1565b9250506060611bbe87828801611a10565b91505092959194509250565b600060208284031215611bdc57600080fd5b6000611bea84828501611a79565b91505092915050565b600060208284031215611c0557600080fd5b6000611c1384828501611a8e565b91505092915050565b60008060408385031215611c2f57600080fd5b6000611c3d85828601611a79565b9250506020611c4e85828601611948565b9150509250929050565b600080600060408486031215611c6d57600080fd5b6000611c7b86828701611a79565b935050602084013567ffffffffffffffff811115611c9857600080fd5b611ca48682870161195d565b92509250509250925092565b60008060008060808587031215611cc657600080fd5b6000611cd487828801611a79565b945050602085013567ffffffffffffffff811115611cf157600080fd5b611cfd878288016119a7565b9350506040611d0e878288016119fb565b925050606085013567ffffffffffffffff811115611d2b57600080fd5b611d3787828801611a25565b91505092959194509250565b600080600060608486031215611d5857600080fd5b6000611d6686828701611a79565b935050602084013567ffffffffffffffff811115611d8357600080fd5b611d8f868287016119a7565b9250506040611da086828701611a79565b9150509250925092565b60008060008060808587031215611dc057600080fd5b6000611dce87828801611a79565b945050602085013567ffffffffffffffff811115611deb57600080fd5b611df7878288016119a7565b9350506040611e0887828801611ab8565b925050606085013567ffffffffffffffff811115611e2557600080fd5b611e31878288016119a7565b91505092959194509250565b60008060408385031215611e5057600080fd5b6000611e5e85828601611a79565b9250506020611e6f85828601611a79565b9150509250929050565b60008060008060808587031215611e8f57600080fd5b6000611e9d87828801611a79565b9450506020611eae87828801611a79565b9350506040611ebf87828801611948565b9250506060611ed087828801611aa3565b91505092959194509250565b600080600080600060808688031215611ef457600080fd5b6000611f0288828901611a79565b9550506020611f1388828901611a79565b9450506040611f2488828901611aa3565b935050606086013567ffffffffffffffff811115611f4157600080fd5b611f4d8882890161195d565b92509250509295509295909350565b611f65816127db565b82525050565b611f74816127c9565b82525050565b6000611f86838561255d565b9350611f9383858461288b565b611f9c836129bd565b840190509392505050565b6000611fb282612552565b611fbc818561255d565b9350611fcc81856020860161289a565b611fd5816129bd565b840191505092915050565b60008154611fed816128cd565b611ff7818661256e565b94506001821660008114612012576001811461202357612056565b60ff19831686528186019350612056565b61202c8561253d565b60005b8381101561204e5781548189015260018201915060208101905061202f565b838801955050505b50505092915050565b61206881612843565b82525050565b612077816127ed565b82525050565b61208681612867565b82525050565b61209581612879565b82525050565b60006120a8602683612579565b91506120b3826129ce565b604082019050919050565b60006120cb605683612579565b91506120d682612a1d565b606082019050919050565b60006120ee600383612579565b91506120f982612a92565b602082019050919050565b6000612111602083612579565b915061211c82612abb565b602082019050919050565b6000612134603883612579565b915061213f82612ae4565b604082019050919050565b612153816127f7565b82525050565b61216281612825565b82525050565b60006121748284611fe0565b915081905092915050565b60006020820190506121946000830184611f6b565b92915050565b600060208201905081810360008301526121b48184611fa7565b905092915050565b60006020820190506121d1600083018461205f565b92915050565b60006020820190506121ec600083018461206e565b92915050565b6000602082019050818103600083015261220b8161209b565b9050919050565b6000602082019050818103600083015261222b816120be565b9050919050565b6000606082019050818103600083015261224b816120e1565b905061225a602083018561214a565b612267604083018461206e565b9392505050565b6000602082019050818103600083015261228781612104565b9050919050565b600060208201905081810360008301526122a781612127565b9050919050565b60006020820190506122c3600083018461214a565b92915050565b600060c0820190506122de600083018961214a565b81810360208301526122f08188611fa7565b905081810360408301526123048187611fa7565b90506123136060830186611f5c565b6123206080830185611f6b565b81810360a08301526123328184611fa7565b9050979650505050505050565b6000608082019050612354600083018761214a565b612361602083018661214a565b61236e6040830185611f6b565b61237b6060830184612159565b95945050505050565b6000608082019050612399600083018761214a565b6123a6602083018661214a565b6123b3604083018561207d565b81810360608301526123c58184611fa7565b905095945050505050565b60006080820190506123e5600083018761214a565b6123f2602083018661214a565b6123ff604083018561208c565b81810360608301526124118184611fa7565b905095945050505050565b6000608082019050612431600083018861214a565b61243e602083018761214a565b61244b6040830186612159565b818103606083015261245e818486611f7a565b90509695505050505050565b600060808201905061247f600083018761214a565b61248c602083018661214a565b6124996040830185612159565b81810360608301526124ab8184611fa7565b905095945050505050565b60006124c06124d1565b90506124cc82826128ff565b919050565b6000604051905090565b600067ffffffffffffffff8211156124f6576124f561298e565b5b6124ff826129bd565b9050602081019050919050565b600067ffffffffffffffff8211156125275761252661298e565b5b612530826129bd565b9050602081019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000612595826127ed565b91506125a0836127ed565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038313600083121516156125db576125da612930565b5b817f800000000000000000000000000000000000000000000000000000000000000003831260008312161561261357612612612930565b5b828201905092915050565b6000612629826127ed565b9150612634836127ed565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561267357612672612930565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156126b0576126af612930565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156126ed576126ec612930565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561272a57612729612930565b5b828202905092915050565b6000612740826127ed565b915061274b836127ed565b9250827f80000000000000000000000000000000000000000000000000000000000000000182126000841215161561278657612785612930565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0182136000841216156127be576127bd612930565b5b828203905092915050565b60006127d482612805565b9050919050565b60006127e682612805565b9050919050565b6000819050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b600061284e82612855565b9050919050565b600061286082612805565b9050919050565b600061287282612825565b9050919050565b600061288482612825565b9050919050565b82818337600083830152505050565b60005b838110156128b857808201518184015260208101905061289d565b838111156128c7576000848401525b50505050565b600060028204905060018216806128e557607f821691505b602082108114156128f9576128f861295f565b5b50919050565b612908826129bd565b810181811067ffffffffffffffff821117156129275761292661298e565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c69642072656d6f74652073656e64657220616464726573732e206f60008201527f776e65722073686f756c642063616c6c2073657452656d6f7465282920746f2060208201527f656e61626c652072656d6f746520636f6e747261637400000000000000000000604082015250565b7f5345540000000000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f5468652072656d6f746520616464726573732068617320616c7265616479206260008201527f65656e2073657420666f722074686520636861696e4964210000000000000000602082015250565b612b3c816127c9565b8114612b4757600080fd5b50565b612b53816127ed565b8114612b5e57600080fd5b50565b612b6a816127f7565b8114612b7557600080fd5b50565b612b8181612825565b8114612b8c57600080fd5b50565b612b988161282f565b8114612ba357600080fd5b5056fea2646970667358221220bc7e03d6900abe46d1b63aaf66089093e61c1a87edbe7206a71afb7a700590db64736f6c63430008040033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/MasterChain.sol:MasterChain",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 946,
        "contract": "contracts/MasterChain.sol:MasterChain",
        "label": "endpoint",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(ILayerZeroEndpoint)2130"
      },
      {
        "astId": 950,
        "contract": "contracts/MasterChain.sol:MasterChain",
        "label": "remotes",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint16,t_bytes_storage)"
      },
      {
        "astId": 954,
        "contract": "contracts/MasterChain.sol:MasterChain",
        "label": "counters",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint16,t_int256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(ILayerZeroEndpoint)2130": {
        "encoding": "inplace",
        "label": "contract ILayerZeroEndpoint",
        "numberOfBytes": "20"
      },
      "t_int256": {
        "encoding": "inplace",
        "label": "int256",
        "numberOfBytes": "32"
      },
      "t_mapping(t_uint16,t_bytes_storage)": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => bytes)",
        "numberOfBytes": "32",
        "value": "t_bytes_storage"
      },
      "t_mapping(t_uint16,t_int256)": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => int256)",
        "numberOfBytes": "32",
        "value": "t_int256"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      }
    }
  }
}